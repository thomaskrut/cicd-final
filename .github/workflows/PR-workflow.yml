name: pull-request-workflow

on:
  [pull_request, push]

env:
  AZURE_WEBAPP_NAME: ChatApp10   # set this to your application's name
  # AZURE_RESOURCE_GROUP: DevOps   # set this to your Azure Resource group's name - Needed only if you are provisioning the app in the workflow
  # AZURE_APP_PLAN: ChatApp  # set this to your App service plan's name - Needed only if you are provisioning the app in the workflow

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # checkout the repo
      - uses: actions/checkout@v3
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run build
        run: ./gradlew build

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Build and push image'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:${{ github.sha }}
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:${{ github.sha }}

      #- name: 'Deploy to Azure Container Instances'
      #  uses: 'azure/aci-deploy@v1'
      #  with:
      #    resource-group: ${{ secrets.RESOURCE_GROUP }}
      #    dns-name-label: ${{ secrets.RESOURCE_GROUP }}${{ github.run_number }}
      #    image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:${{ github.sha }}
      #    registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
      #    registry-username: ${{ secrets.REGISTRY_USERNAME }}
      #    registry-password: ${{ secrets.REGISTRY_PASSWORD }}
      #    name: sampleapp
      #    location: 'west us'

      - name: Create and Deploy to Azure Web App
        run: |
          deployment_name="test-deployment-${{ github.sha }}"
          az webapp create --name $deployment_name --resource-group DevOps --plan ChatApp -i ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:${{ github.sha }}
          webapp_url=$(az webapp show --name $deployment_name --resource-group DevOps --query defaultHostName -o tsv)
          echo $webapp_url
        env:
          AZURE_CONTAINER_REGISTRY_SERVER: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          AZURE_CONTAINER_REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
          AZURE_CONTAINER_REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}



      #- name: 'Deploy to Azure Web App for Container'
      #  uses: azure/webapps-deploy@v2
      #  with:
      #    app-name: ${{ env.AZURE_WEBAPP_NAME }}
      #    images: ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:${{ github.sha }}
      #    # resource-group-name: ${{ env.AZURE_RESOURCE_GROUP }}


#jobs:
#  build-project:
#    uses: ./.github/workflows/build-project.yml
#  build-docker-image:
#    needs: build-project
#    runs-on: ubuntu-latest
#    steps:
#    - name: Set up Docker Buildx
#      uses: docker/setup-buildx-action@v3
#    - name: Build and export
#      uses: docker/build-push-action@v5
#      with:
#       context: .
#       tags: myimage:latest
#    - name: echo images
#      run: |
#        docker images
